import '../styles/globals.css';
import type { AppProps } from 'next/app';
import { ToastContainer } from 'react-toastify';
import Head from 'next/head';
import React, { useState } from 'react';
import Appbar from 'src/components/appbar';
import "react-toastify/dist/ReactToastify.css";
import Container from '@mui/material/Container';
import { AuthContext } from 'src/contexts/AuthContext';
import { FilterContext } from 'src/contexts/FilterContext';
import { GiveAwaysContext } from 'src/contexts/GiveAwaysContext';


import { QueryClient, QueryClientProvider } from 'react-query';
import { ThemeProvider, createTheme } from '@mui/material/styles';

import styles from 'styles/Home.module.css';

const darkTheme = createTheme({
  palette: {
    mode: 'dark',
    primary: {
      main: '#1976d2',
    },
  },
});

const queryClient = new QueryClient();

function MyApp({ Component, pageProps }: AppProps) {

  //auth state
  const [loggedInUser, setLoggedInUser] = useState({})

  //filter state 
  const [type, setType] = useState('')
  const [name, setName] = useState('')
  const [platForm, setPlatForm] = useState('')

  //GiveAways state
  const [giveAways, setGiveAways] = useState([])


  return (
    <QueryClientProvider client={queryClient}>
      <ThemeProvider theme={darkTheme}>
        <Head>
          <title>Game </title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <FilterContext.Provider value={{ type, setType, name, setName, platForm, setPlatForm }}>
          <GiveAwaysContext.Provider value={{ giveAways, setGiveAways }}>
            <AuthContext.Provider value={{ loggedInUser, setLoggedInUser }}>

              <Appbar />
              <main className={styles.main}>
                <Container maxWidth="lg" sx={{ mt: '10px' }}>
                  <Component {...pageProps} />
                </Container>
              </main>
              <ToastContainer autoClose={3000} />

            </AuthContext.Provider>
          </GiveAwaysContext.Provider>
        </FilterContext.Provider>

      </ThemeProvider>
    </QueryClientProvider>
  );
}

export default MyApp;
